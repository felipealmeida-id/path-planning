import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
import json

def animate_drones_trayectories_with_time(data):
    fig, ax = plt.subplots(figsize=(10, 10))
    lines = []
    
    for drone_data in data:
        line, = ax.plot([], [], marker='o', label='Drone {}'.format(data.index(drone_data)+1))
        lines.append(line)
    
    time_text = ax.text(0.79, 0.97, '', transform=ax.transAxes, verticalalignment='top')
    
    def init():
        for line in lines:
            line.set_data([], [])
        time_text.set_text('')
        return lines + [time_text]
    
    def animate(i):
        for drone_data, line in zip(data, lines):
            x_values = [point[0] for point in drone_data[:i+1]]
            y_values = [point[1] for point in drone_data[:i+1]]
            line.set_data(x_values, y_values)
        time_text.set_text('Tiempo: {}'.format(i))
        return lines + [time_text]

    ax.set_xlim(min([point[0] for drone in data for point in drone]) - 1, 
                max([point[0] for drone in data for point in drone]) + 1)
    ax.set_ylim(min([point[1] for drone in data for point in drone]) - 1, 
                max([point[1] for drone in data for point in drone]) + 1)
    ax.set_title("Trayectorias de Drones (Animaci√≥n)")
    ax.set_xlabel("Coordenada X")
    ax.set_ylabel("Coordenada Y")
    ax.legend(loc="upper left")
    ax.grid(True)
    
    anim = FuncAnimation(fig, animate, init_func=init, frames=max(len(drone) for drone in data), interval=100, blit=True)
    plt.show()

# Load data from string (simulating json.load)
data_str = '[[[1, 0], [1, 1], [0, 0], [0, 0], [0, 0], [0, 1], [1, 1], [1, 1], [0, 1], [1, 0], [0, 1], [1, 0], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 0], [1, 1], [0, 1], [1, 1], [1, 1], [0, 2], [1, 0], [0, 0], [1, 0], [1, 0], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [0, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 0], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 2], [1, 1], [2, 1], [1, 2], [1, 2], [1, 1], [1, 1], [1, 2], [1, 1], [1, 1], [1, 1], [1, 2], [1, 1], [1, 2], [1, 1], [2, 1], [1, 1], [1, 2], [1, 1], [1, 2], [1, 2], [2, 1], [1, 2], [1, 2], [1, 1], [1, 2], [2, 2], [2, 2], [1, 2], [1, 3], [1, 2], [2, 1], [1, 2], [1, 2], [1, 2], [1, 2], [1, 1], [1, 2], [1, 2], [1, 2], [2, 1], [1, 2], [1, 2], [1, 1], [1, 3], [2, 2], [2, 2], [2, 2], [1, 2], [2, 2], [2, 2], [2, 2], [1, 2], [1, 2], [2, 2], [1, 2], [1, 2], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 3], [3, 3], [2, 3], [3, 2], [2, 3], [2, 3], [2, 3], [3, 3], [2, 3], [3, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [3, 3], [2, 3], [3, 3], [2, 3], [2, 3], [3, 4], [3, 3], [3, 4], [3, 3], [3, 3], [3, 3], [3, 3], [3, 4], [3, 4], [4, 3], [3, 3], [3, 3], [4, 3], [3, 3], [3, 4], [3, 4], [4, 4], [3, 3], [3, 4], [4, 4], [4, 4], [3, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [3, 4], [4, 5], [4, 4], [3, 5], [4, 5], [4, 5], [4, 4], [4, 5], [4, 4], [4, 5], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 4], [4, 5], [4, 5], [5, 5], [5, 5], [4, 5], [5, 5], [5, 4], [4, 5], [5, 5], [4, 5], [4, 5], [5, 6], [4, 5], [5, 5], [5, 5], [4, 5], [5, 5], [4, 6], [5, 5], [5, 5], [5, 5], [5, 5], [4, 6], [5, 5], [5, 6], [5, 5], [4, 6], [5, 5], [5, 5], [5, 6], [5, 6], [5, 6], [5, 6], [5, 6], [5, 7], [4, 6], [6, 6], [5, 6], [4, 6], [5, 6], [5, 6], [5, 6], [5, 6], [5, 5], [5, 6], [5, 6], [5, 6], [5, 6], [5, 6], [5, 7], [5, 6], [4, 6], [5, 7], [6, 6], [6, 7], [6, 7], [5, 7], [4, 7], [6, 7], [5, 7], [6, 7], [5, 7], [5, 7], [5, 7], [6, 6], [5, 7], [4, 8], [6, 7], [6, 6], [5, 7], [5, 6], [5, 7], [5, 6], [5, 6], [5, 7], [5, 6], [6, 7], [5, 7], [5, 7], [5, 7], [6, 7], [5, 7], [5, 7], [5, 7], [5, 8], [5, 7], [5, 7], [5, 7], [5, 7], [5, 7], [5, 8], [5, 6], [5, 8], [5, 7], [5, 6], [5, 6], [5, 7], [6, 7], [5, 7], [5, 6], [5, 7], [5, 6], [5, 7], [5, 7], [5, 7], [5, 6], [5, 7], [5, 7], [5, 7], [5, 6], [5, 7], [5, 7], [5, 7], [6, 6], [5, 6], [5, 7], [5, 7], [5, 7], [5, 6], [5, 7], [5, 7], [5, 7], [5, 6], [4, 7], [4, 7], [5, 7], [4, 7], [4, 6], [5, 7], [5, 7], [5, 7], [5, 6], [4, 7], [4, 6], [4, 7], [5, 7], [5, 6], [5, 7], [4, 6], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [5, 7], [5, 6], [5, 7], [4, 6], [4, 6], [4, 7], [4, 6], [5, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [3, 7], [4, 6], [5, 6], [4, 6], [3, 6], [4, 6], [4, 5], [4, 5], [3, 5], [3, 5], [3, 5], [3, 5], [3, 4], [2, 4], [2, 4], [2, 4], [2, 4], [1, 3], [1, 2], [1, 3], [1, 1], [1, 2], [1, 2], [0, 1], [0, 1], [1, 1], [0, 1], [1, 1], [1, 0], [0, -1]], [[0, 0], [-1, 0], [0, 0], [0, 1], [1, 1], [1, 0], [1, 0], [1, 1], [1, 1], [1, 1], [1, 0], [1, 1], [1, 1], [1, 1], [1, 1], [1, 0], [0, 1], [1, 1], [1, 0], [1, 1], [1, 1], [1, 2], [1, 1], [1, 1], [1, 1], [1, 2], [1, 1], [1, 1], [1, 1], [1, 1], [2, 1], [1, 0], [1, 1], [1, 1], [1, 1], [1, 1], [1, 2], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 2], [1, 2], [1, 2], [1, 2], [1, 1], [2, 1], [1, 1], [1, 1], [0, 2], [1, 1], [0, 1], [1, 1], [1, 1], [1, 2], [0, 1], [2, 2], [1, 2], [0, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 1], [1, 2], [2, 1], [1, 1], [0, 1], [0, 2], [1, 2], [1, 1], [1, 2], [1, 2], [1, 2], [1, 1], [0, 2], [1, 2], [1, 2], [1, 2], [1, 1], [0, 2], [1, 2], [1, 2], [0, 2], [1, 2], [1, 1], [0, 2], [1, 2], [0, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 1], [1, 2], [1, 2], [1, 1], [1, 2], [1, 1], [1, 1], [0, 2], [1, 2], [1, 1], [1, 1], [1, 2], [1, 2], [0, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [0, 2], [1, 1], [1, 3], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 3], [0, 2], [1, 2], [1, 2], [1, 2], [1, 3], [0, 3], [1, 2], [1, 2], [1, 2], [1, 2], [1, 3], [1, 2], [0, 3], [1, 2], [1, 2], [0, 3], [0, 3], [0, 3], [1, 3], [0, 3], [1, 2], [1, 3], [1, 3], [0, 3], [1, 2], [1, 3], [1, 3], [1, 3], [1, 3], [1, 3], [1, 2], [1, 2], [0, 2], [1, 3], [1, 3], [1, 2], [1, 3], [1, 3], [1, 3], [1, 2], [1, 3], [1, 3], [1, 3], [1, 3], [1, 3], [1, 3], [1, 2], [1, 3], [2, 3], [1, 3], [0, 3], [1, 3], [1, 3], [1, 3], [1, 3], [1, 3], [2, 3], [1, 3], [2, 3], [1, 3], [2, 3], [1, 3], [1, 3], [2, 3], [1, 3], [2, 3], [2, 3], [1, 2], [1, 3], [1, 3], [2, 3], [2, 3], [1, 3], [2, 3], [1, 3], [2, 3], [2, 3], [3, 3], [2, 3], [2, 3], [2, 2], [2, 3], [3, 3], [2, 3], [2, 3], [2, 2], [2, 3], [3, 3], [2, 3], [2, 3], [2, 3], [3, 4], [2, 3], [2, 3], [3, 3], [2, 3], [3, 3], [2, 2], [3, 3], [3, 3], [2, 3], [3, 3], [2, 3], [3, 3], [3, 3], [3, 3], [3, 2], [3, 3], [2, 3], [3, 3], [3, 3], [3, 3], [3, 4], [3, 3], [3, 2], [3, 3], [3, 4], [3, 3], [3, 3], [3, 4], [3, 2], [4, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 2], [3, 2], [3, 3], [3, 4], [4, 3], [3, 3], [3, 3], [4, 3], [4, 3], [4, 3], [4, 2], [4, 2], [3, 3], [4, 3], [4, 2], [3, 3], [4, 3], [3, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 2], [4, 3], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [3, 3], [4, 3], [4, 3], [4, 4], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 2], [4, 3], [4, 3], [5, 4], [4, 3], [3, 4], [4, 3], [4, 4], [5, 3], [5, 3], [4, 4], [5, 3], [5, 4], [4, 3], [5, 3], [5, 4], [4, 3], [5, 3], [4, 3], [4, 3], [4, 3], [4, 4], [5, 4], [5, 3], [4, 3], [5, 3], [5, 4], [4, 4], [4, 4], [4, 4], [4, 3], [4, 4], [4, 4], [4, 4], [5, 4], [5, 4], [4, 4], [5, 4], [5, 4], [4, 4], [4, 4], [5, 4], [4, 4], [5, 4], [5, 4], [4, 4], [4, 4], [4, 4], [5, 4], [5, 4], [5, 4], [4, 5], [5, 4], [3, 3], [4, 3], [4, 4], [4, 3], [4, 4], [5, 4], [4, 4], [4, 4], [5, 4], [5, 4], [4, 4], [4, 4], [5, 4], [4, 4], [4, 4], [5, 3], [4, 4], [4, 4], [4, 4], [4, 3], [5, 3], [4, 3], [4, 3], [4, 3], [3, 2], [3, 2], [3, 3], [3, 3], [3, 2], [2, 1], [2, 1], [2, 1], [2, 2], [1, 1], [1, 1], [0, 1], [1, 1], [1, 0], [-1, 0], [-1, 0], [0, 1]]]'  # Replace with your data string
data = json.loads(data_str)
animate_drones_trayectories_with_time(data)
