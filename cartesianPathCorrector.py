import torch
import ast

def make_trajectories_valid(trajectories_str, device='cpu'):
    # Convert the input string to a tensor
    trajectories_list = ast.literal_eval(trajectories_str)
    trajectories = torch.tensor(trajectories_list, dtype=torch.float32).to(device)
    
    # Initialize a list to hold valid trajectories
    valid_trajectories = []

    for trajectory in trajectories:
        # Set initial position to (0,0)
        initial_position = torch.zeros(1, trajectory.shape[1]).to(device)

        # Calculate the differences of each step
        diffs = trajectory[1:] - trajectory[:-1]

        # Clamp the differences to the range [-1, 1]
        clamped_diffs = torch.clamp(diffs, -1, 1)

        # Cumulatively sum the clamped differences starting from (0,0)
        valid_trajectory = torch.cumsum(clamped_diffs, dim=0)
        valid_trajectory = torch.cat([initial_position, valid_trajectory], dim=0)

        # Scale trajectory to end at (0,0)
        scale_factor = valid_trajectory[-1] / valid_trajectory
        scale_factor[torch.isinf(scale_factor)] = 0  # Replace infinities with 0
        valid_trajectory *= scale_factor

        # Ensure all points are within the [0, 14] range
        valid_trajectory = torch.clamp(valid_trajectory, 0, 14)

        # Convert to integer type
        valid_trajectory = valid_trajectory.int()

        # Append to the list of valid trajectories
        valid_trajectories.append(valid_trajectory)

    # Stack the list of valid trajectories to create a tensor
    valid_trajectories_tensor = torch.stack(valid_trajectories)

    return valid_trajectories_tensor

# Example usage:
trajectories_str = "[[[0, 0], [0, 0], [1, 0], [2, 1], [1, 1], [2, 1], [1, 1], [2, 0], [2, 1], [3, 2], [3, 1], [2, 1], [3, 1], [2, 1], [3, 1], [4, 2], [4, 1], [2, 1], [4, 1], [2, 1], [4, 1], [3, 1], [4, 1], [2, 1], [3, 2], [3, 2], [3, 1], [5, 2], [3, 1], [2, 2], [3, 1], [4, 1], [4, 2], [3, 2], [4, 1], [3, 2], [3, 2], [4, 2], [6, 2], [4, 2], [5, 2], [3, 2], [5, 3], [5, 2], [6, 2], [4, 2], [5, 2], [4, 2], [4, 2], [5, 3], [5, 2], [6, 2], [8, 3], [6, 3], [9, 3], [9, 4], [9, 2], [7, 3], [10, 2], [9, 3], [9, 3], [9, 4], [9, 3], [9, 3], [9, 3], [11, 4], [11, 4], [9, 4], [8, 4], [8, 3], [5, 3], [7, 4], [7, 5], [7, 4], [8, 3], [7, 3], [7, 3], [6, 4], [6, 4], [9, 3], [8, 5], [8, 4], [9, 4], [9, 3], [8, 5], [8, 3], [5, 4], [7, 4], [8, 3], [9, 3], [9, 4], [9, 5], [8, 3], [9, 3], [10, 3], [11, 4], [11, 4], [13, 4], [11, 4], [14, 4], [12, 4], [12, 5], [14, 4], [15, 5], [16, 6], [16, 5], [15, 5], [15, 5], [17, 6], [16, 6], [14, 7], [17, 7], [16, 5], [17, 4], [15, 5], [20, 6], [17, 4], [17, 6], [15, 5], [17, 6], [17, 4], [17, 5], [17, 5], [16, 5], [15, 5], [14, 5], [17, 5], [19, 5], [15, 5], [18, 5], [16, 4], [15, 5], [15, 4], [16, 4], [16, 4], [15, 6], [18, 4], [17, 4], [14, 4], [13, 3], [13, 4], [13, 4], [15, 3], [14, 5], [15, 4], [15, 4], [13, 4], [12, 5], [12, 4], [11, 2], [11, 3], [11, 3], [12, 3], [12, 3], [10, 2], [10, 2], [9, 2], [11, 2], [10, 2], [11, 1], [9, 2], [13, 2], [11, 2], [11, 1], [13, 1], [14, 1], [13, 1], [15, 1], [15, 1], [14, 1], [13, 1], [17, 1], [20, 1], [18, 1], [18, 1], [18, 1], [18, 1], [19, 1], [18, 1], [22, 1], [21, 1], [23, 1], [21, 1], [22, 2], [23, 1], [24, 1], [23, 1], [25, 1], [25, 1], [25, 1], [24, 2], [26, 1], [24, 1], [25, 1], [26, 1], [25, 1], [25, 1], [25, 1], [25, 2], [25, 1], [24, 1], [26, 1], [25, 1], [26, 1], [25, 1], [25, 1], [25, 1], [24, 1], [24, 1], [24, 1], [24, 1], [25, 1], [24, 1], [23, 1], [23, 1], [23, 1], [22, 1], [23, 1], [23, 1], [23, 1], [24, 1], [22, 1], [23, 1], [22, 1], [23, 1], [24, 1], [24, 1], [24, 1], [24, 1], [25, 1], [26, 1], [25, 1], [26, 1], [26, 1], [27, 1], [27, 1], [28, 1], [28, 1], [28, 1], [28, 1], [28, 1], [28, 1], [28, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [29, 1], [28, 1], [28, 1], [28, 2], [29, 2], [28, 2], [28, 2], [28, 1], [28, 1], [28, 1], [28, 2], [28, 2], [28, 2], [28, 2], [28, 2], [28, 2], [28, 2], [28, 2], [28, 2], [28, 1], [28, 2], [28, 2], [28, 2], [28, 2], [28, 2], [28, 2], [28, 3], [28, 3], [28, 3], [28, 2], [28, 2], [28, 3], [27, 3], [28, 3], [27, 4], [28, 3], [27, 4], [27, 4], [27, 4], [27, 4], [27, 4], [27, 4], [26, 3], [27, 4], [26, 4], [26, 4], [26, 4], [26, 5], [26, 3], [26, 4], [25, 4], [26, 5], [27, 4], [27, 4], [26, 3], [25, 4], [26, 4], [27, 4], [25, 4], [26, 4], [26, 4], [26, 3], [27, 4], [27, 4], [26, 4], [26, 4], [26, 4], [26, 4], [27, 5], [27, 5], [26, 4], [26, 4], [26, 4], [26, 4], [27, 4], [25, 5], [26, 6], [26, 4], [26, 4], [26, 5], [26, 5], [25, 5], [25, 5], [25, 6], [26, 6], [25, 7], [26, 7], [26, 7], [26, 6], [25, 6], [26, 6], [25, 7], [25, 6], [24, 7], [22, 5], [22, 4], [20, 5], [19, 3], [18, 3], [19, 2], [18, 2], [15, 1], [17, 1], [13, 1], [12, 0], [13, 0], [11, 0], [11, 0], [9, 0], [9, 0], [7, 0], [4, 0], [4, 0], [5, 0], [4, 0], [2, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 1], [0, 1], [1, 1], [2, 2], [1, 2], [2, 1], [4, 3], [2, 2], [3, 2], [3, 3], [2, 5], [3, 4], [3, 1], [3, 3], [3, 3], [4, 3], [3, 3], [3, 3], [4, 4], [3, 3], [4, 3], [6, 4], [4, 3], [5, 3], [5, 3], [5, 3], [4, 3], [4, 3], [4, 3], [5, 3], [4, 4], [6, 2], [7, 2], [6, 3], [3, 3], [5, 3], [4, 3], [4, 2], [4, 4], [6, 3], [3, 2], [4, 4], [3, 5], [4, 3], [5, 3], [4, 3], [6, 4], [6, 3], [5, 3], [3, 5], [5, 5], [8, 3], [5, 6], [5, 3], [6, 4], [7, 6], [5, 6], [6, 6], [5, 6], [7, 7], [7, 6], [7, 5], [5, 7], [8, 8], [7, 7], [6, 6], [7, 5], [6, 7], [8, 9], [5, 7], [5, 6], [6, 7], [5, 9], [7, 7], [5, 7], [6, 7], [5, 6], [5, 8], [5, 8], [6, 6], [5, 5], [5, 6], [4, 6], [5, 8], [4, 5], [5, 4], [5, 5], [5, 5], [5, 5], [4, 4], [4, 5], [3, 4], [3, 4], [4, 4], [3, 3], [3, 5], [4, 3], [4, 4], [4, 4], [4, 4], [4, 3], [3, 4], [3, 4], [4, 4], [3, 4], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [2, 4], [2, 4], [2, 4], [2, 3], [2, 3], [1, 3], [2, 4], [2, 4], [2, 3], [2, 5], [2, 6], [2, 7], [2, 5], [1, 5], [2, 4], [2, 5], [2, 6], [2, 6], [2, 5], [2, 6], [2, 6], [1, 8], [2, 6], [2, 5], [3, 6], [2, 6], [2, 6], [2, 4], [3, 5], [2, 5], [3, 4], [2, 4], [2, 5], [3, 4], [3, 4], [3, 5], [3, 4], [3, 4], [3, 5], [3, 3], [3, 3], [4, 4], [3, 3], [4, 4], [5, 4], [4, 4], [3, 3], [4, 3], [4, 3], [4, 3], [3, 3], [4, 3], [3, 2], [4, 2], [4, 3], [3, 3], [4, 3], [3, 2], [3, 2], [4, 2], [3, 2], [3, 2], [3, 2], [3, 2], [4, 2], [3, 2], [4, 2], [3, 2], [3, 2], [4, 1], [3, 2], [3, 2], [3, 2], [3, 2], [3, 2], [2, 2], [3, 3], [2, 2], [3, 2], [3, 2], [3, 2], [3, 2], [3, 2], [3, 3], [3, 2], [3, 3], [4, 3], [3, 3], [3, 2], [3, 2], [3, 2], [4, 2], [4, 2], [3, 3], [4, 3], [3, 3], [5, 2], [4, 3], [3, 3], [4, 3], [4, 2], [4, 3], [5, 3], [5, 2], [3, 3], [4, 3], [4, 2], [4, 2], [4, 2], [3, 3], [3, 2], [3, 2], [3, 2], [3, 2], [3, 2], [2, 2], [3, 2], [3, 2], [2, 2], [3, 2], [2, 2], [2, 2], [2, 2], [3, 2], [2, 2], [3, 2], [2, 2], [3, 2], [2, 2], [3, 2], [3, 2], [3, 2], [3, 2], [3, 2], [3, 3], [4, 2], [3, 2], [3, 3], [5, 2], [4, 2], [4, 2], [5, 2], [4, 2], [5, 2], [5, 3], [5, 2], [5, 2], [6, 2], [5, 2], [5, 2], [5, 1], [5, 2], [6, 1], [8, 2], [7, 2], [8, 2], [8, 1], [8, 1], [8, 2], [6, 2], [6, 1], [5, 2], [6, 2], [6, 1], [6, 2], [7, 2], [5, 2], [7, 2], [5, 2], [6, 2], [7, 2], [6, 2], [7, 2], [6, 2], [7, 2], [7, 2], [5, 2], [7, 2], [8, 2], [6, 2], [7, 2], [7, 2], [7, 2], [8, 1], [9, 2], [8, 2], [8, 2], [10, 2], [9, 2], [10, 2], [10, 1], [11, 1], [12, 1], [12, 1], [13, 1], [13, 1], [14, 1], [13, 1], [14, 2], [13, 1], [13, 1], [14, 1], [15, 2], [16, 1], [14, 2], [13, 2], [14, 2], [13, 2], [10, 2], [13, 2], [13, 2], [13, 3], [16, 3], [15, 4], [15, 3], [15, 4], [16, 5], [14, 4], [14, 5], [15, 5], [15, 6], [16, 7], [15, 5], [15, 6], [16, 5], [17, 7], [17, 7], [17, 6], [15, 7], [18, 6], [16, 8], [17, 7], [15, 7], [16, 7], [18, 7], [18, 7], [16, 7], [16, 7], [16, 6], [14, 7], [14, 6], [15, 6], [13, 7], [13, 8], [14, 5], [13, 6], [12, 6], [12, 6], [12, 8], [11, 6], [11, 7], [10, 7], [10, 7], [11, 6], [12, 7], [11, 7], [12, 8], [13, 7], [12, 8], [13, 8], [15, 8], [11, 8], [15, 10], [15, 8], [15, 8], [16, 8], [15, 9], [17, 9], [16, 8], [15, 9], [18, 7], [16, 8], [17, 7], [15, 7], [14, 5], [13, 6], [11, 4], [10, 3], [7, 3], [7, 3], [6, 1], [5, 1], [6, 1], [3, 1], [4, 0], [2, 0], [0, 0], [0, 0], [0, 0]]]"  # Replace with your actual string
device = 'cpu'  # Or 'cuda' if using GPU
valid_trajectories_tensor = make_trajectories_valid(trajectories_str, device)
# print as string to compare with original
print(valid_trajectories_tensor.tolist())